<?php

/**
 * Implements hook_install().
 *
 * Perform actions to set up the site for this profile.
 */
function gsb_public_install() {

  $actions = array(
    'revert',
    'migration_prep',
    'siteinfo',
    'time_date',
    'userinfo',
    'roles',
    'users',
    'filter_formats',
    'taxonomy',
    'workbench',
    'panopoly',
    'pathauto',
    'cron',
    'cache',
    'files',
    'image_styles',
    'themes',
    'media',
    'menu',
    'blocks',
    'fancybox',
    'acquia',
    'ds',
    'quickbar',
    'cleanup',  // please leave this as the last task to run
  );

  foreach($actions as $action) {
    drush_print('Starting ' . $action . ' action');
    $time_start = microtime(true);
    include_once('includes/' . $action . '.install.inc');
    $func = '_gsb_public_setup_' . $action;
    $func();
    $time_end = microtime(true);
    $time = $time_end - $time_start;
    drush_print('End of ' . $action . ' action. Completed in ' . $time . ' seconds.');
  }

  db_query("UPDATE {system} SET weight = '-6' WHERE name = 'breadcrumbs_by_path'");
}

function _gsb_public_variable_set_multiple($variables) {
  foreach($variables as $variable => $value) {
    variable_set($variable, $value);
  }
}

/**
 * Add a 'year' date format.
 */
function gsb_public_update_7000() {
  // Insert custom format: 2011
  db_insert('date_formats')
    ->fields(array('format' => 'Y', 'type' => 'custom', 'locked' => 0))
    ->execute();
  // Insert custom format: 2011
  db_insert('date_format_type')
    ->fields(array('type' => 'year', 'title' => 'Year', 'locked' => 0))
    ->execute();
  // Date Year Format
  variable_set('date_format_year', 'Y');
}

/**
 * Add a video image format.
 */
function gsb_public_update_7001() {
  // Declare our image styles
  $image_styles = array(
    '270x158_video' => array(
      array(
        'name' => 'image_scale_and_crop',
        'data' => array(
          'width' => '270',
          'height' => '158',
        ),
        'weight' => 1,
      ),
      array(
        'name' => 'canvasactions_file2canvas',
        'data' => array(
          'xpos' => 'center',
          'ypos' => 'center',
          'alpha' => 100,
          'path' => 'profiles/gsb_public/themes/gsb_theme/images/video_play.png',
        ),
        'weight' => 2,
      ),
    ),
  );
  _gsb_public_install_add_image_style($image_styles);
}

/**
 * Add a 'time_only' date format.
 */
function gsb_public_update_7002() {
  // Insert custom format: 2:45pm
  db_insert('date_formats')
    ->fields(array('format' => 'g:ia', 'type' => 'custom', 'locked' => 0))
    ->execute();
  // Insert custom format: 2:45pm
  db_insert('date_format_type')
    ->fields(array('type' => 'time_only', 'title' => 'Time only', 'locked' => 0))
    ->execute();
  // Date Time only Format
  variable_set('date_format_time_only', 'g:ia');
}

/**
 * Add a 'dayname_no_year' date format.
 */
function gsb_public_update_7003() {
  // Insert custom format: 2:45pm
  db_insert('date_formats')
    ->fields(array('format' => 'l, M d', 'type' => 'custom', 'locked' => 0))
    ->execute();
  // Insert custom format: 2:45pm
  db_insert('date_format_type')
    ->fields(array('type' => 'dayname_no_year', 'title' => 'Day name, no year', 'locked' => 0))
    ->execute();
  // Date Time only Format
  variable_set('date_format_dayname_no_year', 'l, M d');
}

/**
 * Add another image style.
 */
function gsb_public_update_7004() {
  // Declare our image styles
  $image_styles = array(
    '566x396' => array(
      array(
        'name' => 'image_scale_and_crop',
        'data' => array(
          'width' => 566,
          'height' => 396,
        ),
        'weight' => 1,
      ),
    ),
  );
  _gsb_public_install_add_image_style($image_styles);
}

/**
 * Adds image styles
 */
function _gsb_public_install_add_image_style($image_styles) {
  // Loop through the image styles and add them.
  foreach ($image_styles as $name => $effects) {
    $style = image_style_save(array('name' => $name));
    foreach ($effects as $effect) {
      $effect['isid'] = $style['isid'];
      image_effect_save($effect);
    }
  }
}

/**
 * Enable the addthis and computed_field modules.
 */
function gsb_public_update_7005() {
  module_enable(array('addthis', 'computed_field'));
}

/**
 * Add another image style.
 */
function gsb_public_update_7006() {
  // Declare our image styles
  $image_styles = array(
    '145x_variable' => array(
      array(
        'name' => 'image_scale',
        'data' => array(
          'width' => 145,
          'height' => '',
          'upscale' => 1,
        ),
        'weight' => 1,
      ),
    ),
  );
  _gsb_public_install_add_image_style($image_styles);
}

/**
 * Add pathauto ignore words
 */
function gsb_public_update_7007() {
  variable_set("pathauto_ignore_words",
    "a, an, as, at, before, but, by, for, from, is, in, into, like, of, off, on, onto, our, per, since, than, the, this, that, to, up, via, with");
}


/**
 * Update the 'event_category' vocabulary
 */
function gsb_public_update_7008() {

  $vocab_found = false;
  $term_found = false;

  $vocabularies = taxonomy_get_vocabularies();
  foreach ($vocabularies as $vid => $vocabulary) {
    if ($vocabulary->machine_name == 'event_category') {
      $vocab_found = true;
      break;
    }
  }

  if ($vocab_found) {

    $terms = taxonomy_get_tree($vid);
    foreach ($terms as $key => $term) {
      if ($term->name == 'On-campus Events') {
        $term_found = true;
        break;
      }
    }

    if ($term_found) {
      // Rename term 'On-campus Events'
      // to.         'On-campus'
      $term->name = 'On-campus';
      taxonomy_term_save($term);
    }

    // Add term 'Diverse Communities'

    $term = (object) array(
      'vid' => $vocabulary->vid,
      'name' => 'Diverse Communities',
    );
    taxonomy_term_save($term);

  }

}

/**
 * Enable diff and breadcrumbs_by_path module.
 */
function gsb_public_update_7009() {
  module_enable(array('diff', 'breadcrumbs_by_path'));

  db_query("UPDATE {system} SET weight = '-6' WHERE name = 'breadcrumbs_by_path'");
}

// Enable breakpoints module.
function gsb_public_update_7010() {
  module_enable(array('breakpoints'));
}

// Enable gsb_tokens module.
function gsb_public_update_7011() {
  module_enable(array('gsb_tokens'));
}

/**
 * Update the gsb_wysiwyg_text format filter
 */
function gsb_public_update_7012() {
  $format = filter_format_load('gsb_wysiwyg_text');
  $filters = filter_list_format($format->format);
  // Build the $format->filters array...
  $format->filters = array();
  foreach($filters as $name => $filter) {
    foreach($filter as $k => $v) {
      $format->filters[$name][$k] = $v;
    }
  }
  $format->filters["wysiwyg"]['settings']["valid_elements"] =
    "a[!href|target<_blank|title|style],\n" .
    "div[style|class|id|align<center?justify?left?right],\n" .
    "p,br,em,i,strong,u,cite,blockquote,hr,ul,ol,li,dl,dt,dd,sup,sub,\n" .
    "table,tbody,thead,th,tr,td,\n" .
    "span[style|id],p[style|class|id],\n" .
    "h1,h2,h3,h4,h5,h6,\n" .
    "object,iframe,area,embed,\n" .
    "address,abbr,caption,pre,code,script,\n" .
    "img[!src|title|alt|style|width|height|class|hspace|vspace|id],\n" .
    "@[style]";
  // Save the panopoly wysiwyg format.
  filter_format_save($format);
}

/**
 * Update the wysiwyg modules
 */
function gsb_public_update_7013() {

  // Disable some wysiwyg modules

  module_disable(array('gsb_panopoly_wyiswyg_override'));
  drupal_uninstall_modules(array('gsb_panopoly_wyiswyg_override'));

  module_disable(array('panopoly_wyiswyg'));
  drupal_uninstall_modules(array('panopoly_wyiswyg'));

  module_disable(array('wysiwyg_filter'));
  drupal_uninstall_modules(array('wysiwyg_filter'));

  // Update the body field

  $num_updated = db_update('field_revision_field_body')
    ->fields(array(
      'field_body_format' => 'gsb_wysiwyg_text',
    ))
    ->condition('field_body_format', 'panopoly_wysiwyg_text', '=')
    ->execute();

  $num_updated = db_update('field_data_field_body')
    ->fields(array(
      'field_body_format' => 'gsb_wysiwyg_text',
    ))
    ->condition('field_body_format', 'panopoly_wysiwyg_text', '=')
    ->execute();

}

/**
 * Remove navbar and related modules
 */
function gsb_public_update_7014() {

  // Remove navbar and related modules

  module_disable(array('gsb_admin_enhancements'));
  drupal_uninstall_modules(array('gsb_admin_enhancements'));

  module_disable(array('navbar'));
  drupal_uninstall_modules(array('navbar'));

  // Enable the admin menu modules

  module_enable(array('admin_menu','admin_menu_toolbar'));

}

/**
 * Enable gsb_feature_gsa_search module.
 */
function gsb_public_update_7015() {
  module_enable(array('gsb_feature_gsa_search'));
}

/**
 * Update the gsb_wysiwyg_text format filter allowed html settings
 */
function gsb_public_update_7016() {

  $format = filter_format_load('gsb_wysiwyg_text');
  $filters = filter_list_format($format->format);

  // Build the $format->filters array...
  $format->filters = array();
  foreach($filters as $name => $filter) {
    foreach($filter as $k => $v) {
      $format->filters[$name][$k] = $v;
    }
  }

  $format->filters["filter_html"]['status'] = '1'; 
  $format->filters["filter_html"]['settings']['allowed_html'] = '<a> <em> <strong> <cite> <blockquote> <code> <ul> <ol> <li> <dl> <dt> <dd> <div> <p> <br> <i> <u> <cite> <hr> <sub> <sup> <table> <tbody> <thead> <th> <tr> <td> <span> <h1> <h2> <h3> <h4> <h5> <h6> <object> <iframe> <area> <embed> <address> <abbr> <caption> <pre> <code> <script> <img>'; 

  // Save the format.
  filter_format_save($format);

}
